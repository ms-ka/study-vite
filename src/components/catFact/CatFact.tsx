import React, { useEffect, useState } from "react";
import Loader from "../loader/Loader";
import MyButton from "../myButton/MyButton";
import styles from "./catFact.module.css";

//tworzƒô komponent, kt√≥ry podczas ≈Çadowania strony wysy≈Ça zapytanie
//podczas naci≈õniƒôcia guzika pokazuje dane w postaci fakt√≥w o kocie

interface ICatFact {
  fact: string;
}

export default function CatFact(): JSX.Element {
  //3. Tutaj bƒôdƒÖ siƒô zapisywa≈Çy fakty ze strony
  const [facts, setFacts] = useState<string[]>([]); // massiv string√≥w

  //7. Loader - prze≈ÇƒÖcznik informujƒÖcy o ≈Çadowaniu
  const [loading, setLoading] = useState<boolean>(true);

  //1. tutaj funkcja otrzymuje fakt o kocie z API
  const fetchCatFact = async (): Promise<void> => {
    setLoading(true); //Loader jest wy≈õwietlany, gdy loading jest true.
    const res = await fetch("https://catfact.ninja/fact");
    const data: ICatFact = await res.json();

    //4. Zapis danych w zmiennej stanu, aby m√≥c p√≥≈∫niej u≈ºywaƒá i zmieniaƒá
    setFacts((prevFacts) => [...prevFacts, data.fact]); // Dodanie nowego faktu
    setLoading(false);
  };

  //2. tutaj funkcja zwraca siƒô do serwera w useEffect poprzez pusty massiv, aby funkcja uruchomi≈Ça siƒô tylko raz
  useEffect(() => {
    fetchCatFact();
  }, []);

  // Funkcja obs≈ÇugujƒÖca przycisk GET MORE INFO
  const handleGetCat = () => {
    setTimeout(() => {
      fetchCatFact();
    }, 1000);
  };

  // Funkcja obs≈ÇugujƒÖca przycisk DELETE ALL DATA
  const handleDeleteAll = () => {
    setFacts([]);
  };

  return (
    <div className={styles.catContainer}>
      <h3>Cat Fact üê±</h3>
      {/* 6. –¥–æ–±–∞–≤–∏–ª–∏ –≤ –≤–µ—Ä—Å—Ç–∫—É –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ –∫–Ω–æ–ø—É —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º onClick –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ */}
      <MyButton text="Get more info" func={handleGetCat} />
      {/* –µ—Å–ª–∏ –≤ loading true –º—ã –ø–æ–∫–∞–∂–µ–º Loader, –µ—Å–ª–∏ false -  */}
      {facts.length > 0 && (
        <MyButton text="delete all data" func={handleDeleteAll} />
      )}

      {loading ? (
        <Loader />
      ) : (
        //Zastosowano map, aby wy≈õwietliƒá ka≈ºdy fakt w osobnym p
        <>
          {facts.length > 0 && (
            <div className={styles.catWrapper}>
              {facts.map((fact, index) => (
                <p key={index}>{fact}</p>
              ))}
            </div>
          )}
        </>
      )}
    </div>
  );
}
